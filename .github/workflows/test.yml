name: testing

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: test-application

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Check out Devolutions/actions
        uses: actions/checkout@v4
        with:
          repository: Devolutions/actions
          ref: v1
          token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}
          path: ./.github/workflows

      - name: Get current version
        id: get-version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Does tag exists?
        uses: ./.github/workflows/tag-check
        with:
          github_token: ${{ github.token }}
          tag: v${{ steps.get-version.outputs.version }}

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
          check-latest: true

      - name: Download CA certificate
        uses: ./.github/workflows/create-file-from-secret
        with:
          content: ${{ secrets.DEVOLUTIONS_HQ_ISSUING_CA_PEM }}
          path: ${{ runner.temp }}/certificate.pem

      - name: Download test certificate
        uses: ./.github/workflows/create-file-from-secret
        with:
          content: ${{ secrets.TEST_CERTIFICATE }}
          path: ${{ runner.temp }}/test.p12
          format: base64

      - name: Update CA store
        run: |
          sudo cp ${{ runner.temp }}/certificate.pem /usr/local/share/ca-certificates/certificate.crt
          sudo update-ca-certificates

      - name: Connect to Tailscale
        uses: ./.github/workflows/tailscale
        with:
          auth_key: ${{ secrets.TAILSCALE_AUTH_KEY_EPHEMERAL }}
          exit_node: 100.99.49.20
          accept_dns: true

      - name: Test application
        uses: ./.github/workflows/go-test
        env:
          TEST_USER: ${{ secrets.TEST_USER }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          TEST_INSTANCE: ${{ secrets.TEST_INSTANCE }}
          TEST_VAULT_ID: ${{ secrets.TEST_VAULT_ID }}
          TEST_CERTIFICATE_ENTRY_ID: ${{ secrets.TEST_CERTIFICATE_ENTRY_ID }}
          TEST_CERTIFICATE_FILE_PATH: '${{ runner.temp }}/test.p12'
          TEST_HOST_ENTRY_ID: ${{ secrets.TEST_HOST_ENTRY_ID }}
          TEST_SSH_KEY_ENTRY_ID: ${{ secrets.TEST_SSH_KEY_ENTRY_ID }}
          TEST_SSH_PASSWORD_ENTRY_ID: ${{ secrets.TEST_SSH_PASSWORD_ENTRY_ID }}
          TEST_USER_ENTRY_ID: ${{ secrets.TEST_USER_ENTRY_ID }}
          TEST_WEBSITE_ENTRY_ID: ${{ secrets.TEST_WEBSITE_ENTRY_ID }}
        with:
          github_token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}

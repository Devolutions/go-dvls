name: testing

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test-application

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Check out Devolutions/actions
        uses: actions/checkout@v3
        with:
          repository: Devolutions/actions
          ref: master
          token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}
          path: ./.github/workflows

      - name: Get current version
        id: get-version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Does tag exists?
        uses: ./.github/workflows/tag-exists
        with:
          tag: v${{ steps.get-version.outputs.version }}
          comment_on_pr_string: ü§ñ You did not bump the version, a release won't be created ‚ö†Ô∏è

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: ${{ secrets.GO_VERSION }}

      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          path: ~/go/pkg/mod
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download CA certificate
        uses: ./.github/workflows/create-file-from-secret
        with:
          content: ${{ secrets.DEVOLUTIONS_HQ_ISSUING_CA_PEM }}
          path: ${{ runner.temp }}/certificate.pem

      - name: Update CA store
        run: |
          sudo cp ${{ runner.temp }}/certificate.pem /usr/local/share/ca-certificates/certificate.crt
          sudo update-ca-certificates

      - name: Connect to Tailscale
        uses: ./.github/workflows/tailscale
        with:
          authKey: ${{ secrets.TAILSCALE_AUTH_KEY_EPHEMERAL }}
          exitNode: 100.99.49.20
          acceptDns: true

      - name: Test application
        uses: ./.github/workflows/go-test
        env:
          TEST_USER: ${{ secrets.TEST_USER }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          TEST_INSTANCE: ${{ secrets.TEST_INSTANCE }}
          TEST_ENTRY_ID: ${{ secrets.TEST_ENTRY_ID }}
          TEST_VAULT_ID: ${{ secrets.TEST_VAULT_ID }}
        with:
          user: devolutionsbot
          token: ${{ secrets.DEVOLUTIONSBOT_TOKEN }}
